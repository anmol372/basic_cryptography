Results of Test File
\n
Current Content of Directory
blocksize ComputerSecurityHW2.py decryptedFileAES_CBClargetestfile decryptedFileAES_CTR_128largetestfile decryptedFileAES_CTR_256largetestfile dsa_key_2048.pem dsa_key_3072.pem encryptedFileAES_CBClargetestfile encryptedFileAES_CTR_128largetestfile encryptedFileAES_CTR_256largetestfile hashDigestSHA256 hashDigestSHA3_256 hashDigestSHA512 keys largetestfile result.txt RSA_2048_decrypt_OAEP_Paddinglargetestfile RSA_2048_encrypt_OAEP_Paddinglargetestfile RSA_3072_decrypt_OAEP_Paddinglargetestfile RSA_3072_encrypt_OAEP_Paddinglargetestfile
\n
Encryption and Decryption of a file using AES in CBC mode with 128bits key
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


--- 4988 nanoseconds to generate key using AESNI for CBC mode.
AES CBC Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 19700 nanoseconds to encrypt using AESNI in CBC mode.
--- Encryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 0.0018855541380399827.
AES CBC Decryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 120218275 nanoseconds to decrypt using AESNI in CBC mode.
--- Decryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 11.506457855246644.

Correct Encryption and Decryption as Input File "largetestfile" and Decrypted file "decryptedFileAES_CBClargetestfile" match.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Encryption and Decryption of a file using AES in CTR mode with 128bits key
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 7466 nanoseconds to generate key using AESNI for CTR mode
AES CTR 128bits Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 29366560 nanoseconds to encrypt using AESNI in CTR mode.
--- Encryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 2.810773539492357.
AES CTR 128bits Decryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 25687228 nanoseconds to decrypt using AESNI in CTR mode.
--- Decryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 2.4586102519509967.

Correct Encryption and Decryption as Input File "largetestfile" and Decrypted file "decryptedFileAES_CTR_128largetestfile" match.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Encryption and Decryption of a file using AES in CTR mode with 256bits key
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 7110 nanoseconds to generate key using AESNI for CTR mode
AES CTR 256bits Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 28620109 nanoseconds to encrypt using AESNI in CTR mode.
--- Encryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 2.739328170360678.
AES CTR 256bits Decryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 25749920 nanoseconds to decrypt using AESNI in CTR mode.
--- Decryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 2.464610712332137.

Correct Encryption and Decryption as Input File "largetestfile" and Decrypted file "decryptedFileAES_CTR_256largetestfile" match.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Hash of File using SHA256
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 27367306 nanoseconds to calculate SHA256 of file.
--- SHA256 per byte speed ((Time Taken To Hash)/(Size of File)) = 2.6194181256500735.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Hash of File using SHA512
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 17501601 nanoseconds to calculate SHA512 of file.
--- SHA512 per byte speed ((Time Taken To Hash)/(Size of File)) = 1.6751378775570913.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Hash of File using SHA3_256
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 28272781 nanoseconds to calculate sha3_256 of file.
--- sha3_256 per byte speed ((Time Taken To Hash)/(Size of File)) = 2.7060842237790963.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Encryption and Decryption of a file using 2048bit RSA with PKCS1_OAEP 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 0.2800004482269287 nanoseconds to generate keys for RSA
RSA 2048bit Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 31183345833 nanoseconds to encrypt using RSA with OAEP and keysize 2048
--- Encryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 2984.6643032154825.
RSA 2048bit Decryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 98516566900 nanoseconds to decrypt using RSA with OAEP and keysize 2048
--- Decryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 4677.821477057933.

Correct Encryption and Decryption as Input File "largetestfile" and Decrypted file "RSA_2048_decrypt_OAEP_Paddinglargetestfile" match.

Encryption and Decryption of a file using 3072bit RSA with PKCS1_OAEP 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 1.1687757968902588 nanoseconds to generate keys for RSA
RSA 3072bit Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 52689018980 nanoseconds to encrypt using RSA with OAEP and keysize 3072
--- Encryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 5043.045571929249.
RSA 2048bit Decryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 238548181136 nanoseconds to decrypt using RSA with OAEP and keysize 3072
--- Decryption Speed per byte ((Time Taken To Encrypt)/(Size of File)) = 7551.256539175287.

Correct Encryption and Decryption as Input File "largetestfile" and Decrypted file "RSA_3072_decrypt_OAEP_Paddinglargetestfile" match.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sign and verify a file using 2048bit DSA
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


--- 1557115886 nanoseconds to generate DSA key.
Sign a file using 2048bit DSA
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 440181 nanoseconds to sign file.
Verify a file using 2048bit DSA
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The message is authentic
--- 707241 nanoseconds to verify file.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sign and verify a file using 3072bit DSA
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


--- 18685160018 nanoseconds to generate DSA key.
Sign a file using 3072bit DSA
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--- 1277562 nanoseconds to sign file.
Verify a file using 3072bit DSA
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The message is authentic
--- 2277531 nanoseconds to verify file.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

“n”
“Contents in Directory”
blocksize ComputerSecurityHW2.py decryptedFileAES_CBClargetestfile decryptedFileAES_CTR_128largetestfile decryptedFileAES_CTR_256largetestfile dsa_key_2048.pem dsa_key_3072.pem encryptedFileAES_CBClargetestfile encryptedFileAES_CTR_128largetestfile encryptedFileAES_CTR_256largetestfile hashDigestSHA256 hashDigestSHA3_256 hashDigestSHA512 keys largetestfile result.txt RSA_2048_decrypt_OAEP_Paddinglargetestfile RSA_2048_encrypt_OAEP_Paddinglargetestfile RSA_3072_decrypt_OAEP_Paddinglargetestfile RSA_3072_encrypt_OAEP_Paddinglargetestfile
